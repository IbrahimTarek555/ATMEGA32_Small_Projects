Archive member included because of file (symbol)

d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./SSD_program.o (__do_copy_data)
d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./TIMER_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./GIE_program.o
LOAD ./PORT_program.o
LOAD ./SSD_program.o
LOAD ./SWITCH_program.o
LOAD ./TIMER_program.o
LOAD ./main.o
LOAD d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe14
 *(.vectors)
 .vectors       0x00000000       0x54 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO_program.o
 .text          0x00000092        0x0 ./GIE_program.o
 .text          0x00000092        0x0 ./PORT_program.o
 .text          0x00000092        0x0 ./SSD_program.o
 .text          0x00000092        0x0 ./SWITCH_program.o
 .text          0x00000092        0x0 ./TIMER_program.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_u8SetPinDirection
                0x00000092      0x224 ./DIO_program.o
                0x00000092                DIO_u8SetPinDirection
 .text.DIO_u8SetPinValue
                0x000002b6      0x224 ./DIO_program.o
                0x000002b6                DIO_u8SetPinValue
 .text.DIO_u8TogglePinValue
                0x000004da      0x116 ./DIO_program.o
                0x000004da                DIO_u8TogglePinValue
 .text.DIO_u8GetPinValue
                0x000005f0      0x126 ./DIO_program.o
                0x000005f0                DIO_u8GetPinValue
 .text.DIO_u8SetPortDirection
                0x00000716       0x90 ./DIO_program.o
                0x00000716                DIO_u8SetPortDirection
 .text.DIO_u8SetPortValue
                0x000007a6       0x90 ./DIO_program.o
                0x000007a6                DIO_u8SetPortValue
 .text.GIE_voidEnable
                0x00000836       0x10 ./GIE_program.o
                0x00000836                GIE_voidEnable
 .text.GIE_voidDisable
                0x00000846       0x10 ./GIE_program.o
                0x00000846                GIE_voidDisable
 .text.PORT_voidInit
                0x00000856       0x46 ./PORT_program.o
                0x00000856                PORT_voidInit
 .text.SSD_u8SetNumber
                0x0000089c      0x134 ./SSD_program.o
                0x0000089c                SSD_u8SetNumber
 .text.SSD_u8Disable
                0x000009d0       0x72 ./SSD_program.o
                0x000009d0                SSD_u8Disable
 .text.SWITCH_u8GetState
                0x00000a42       0xea ./SWITCH_program.o
                0x00000a42                SWITCH_u8GetState
 .text.TIMER_voidInit
                0x00000b2c       0x86 ./TIMER_program.o
                0x00000b2c                TIMER_voidInit
 .text.TIMER_u8SetCallBackCompareMatch
                0x00000bb2       0x3a ./TIMER_program.o
                0x00000bb2                TIMER_u8SetCallBackCompareMatch
 .text.TIMER_u8SetCallBackOverflow
                0x00000bec       0x3a ./TIMER_program.o
                0x00000bec                TIMER_u8SetCallBackOverflow
 .text.__vector_11
                0x00000c26       0x66 ./TIMER_program.o
                0x00000c26                __vector_11
 .text.__vector_10
                0x00000c8c       0x66 ./TIMER_program.o
                0x00000c8c                __vector_10
 .text.main     0x00000cf2       0x1e ./main.o
                0x00000cf2                main
 .text.MAIN_voidSSD
                0x00000d10      0x100 ./main.o
                0x00000d10                MAIN_voidSSD
 .text.libgcc   0x00000e10        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000e10        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000e10        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000e10                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e10        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000e10                exit
                0x00000e10                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e10        0x4 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000e14                _etext = .

.data           0x00800060        0xc load address 0x00000e14
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./GIE_program.o
 .data          0x00800060        0x0 ./PORT_program.o
 .data          0x00800060        0x0 ./SSD_program.o
 .data          0x00800060        0x0 ./SWITCH_program.o
 .data          0x00800060        0x0 ./TIMER_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.SSD_u8NumbersArray
                0x00800060        0xa ./SSD_program.o
                0x00800060                SSD_u8NumbersArray
 .data.Local_u8SSDDownCounter.1317
                0x0080006a        0x1 ./main.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
 *fill*         0x0080006b        0x1 00
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c       0x13
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006c        0x0 ./DIO_program.o
 .bss           0x0080006c        0x0 ./GIE_program.o
 .bss           0x0080006c        0x0 ./PORT_program.o
 .bss           0x0080006c        0x0 ./SSD_program.o
 .bss           0x0080006c        0x0 ./SWITCH_program.o
 .bss           0x0080006c        0x0 ./TIMER_program.o
 .bss           0x0080006c        0x0 ./main.o
 .bss           0x0080006c        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 d:/embedded systems avr tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.TIMER_pvCTCNotificationFunc
                0x0080006c        0x2 ./TIMER_program.o
 .bss.TIMER_pvOverflowNotificationFunc
                0x0080006e        0x2 ./TIMER_program.o
 .bss.Local_ssdtCountDown.1320
                0x00800070        0x5 ./main.o
 .bss.Local_ssdtCountUp.1319
                0x00800075        0x5 ./main.o
 .bss.Local_u8InitialFlag.1318
                0x0080007a        0x1 ./main.o
 .bss.Local_u8SSDUpCounter.1316
                0x0080007b        0x1 ./main.o
 .bss.Local_u16CountingIterator.1315
                0x0080007c        0x2 ./main.o
 .bss.Local_u8DisplayingIterator.1314
                0x0080007e        0x1 ./main.o
 *(COMMON)
                0x0080007f                PROVIDE (__bss_end, .)
                0x00000e14                __data_load_start = LOADADDR (.data)
                0x00000e20                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080007f        0x0
                0x0080007f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080007f                PROVIDE (__noinit_end, .)
                0x0080007f                _end = .
                0x0080007f                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x17ac
 *(.stab)
 .stab          0x00000000      0x744 ./DIO_program.o
 .stab          0x00000744      0x144 ./GIE_program.o
                                0x1c8 (size before relaxing)
 .stab          0x00000888      0x168 ./PORT_program.o
                                0x1ec (size before relaxing)
 .stab          0x000009f0      0x324 ./SSD_program.o
                                0x3a8 (size before relaxing)
 .stab          0x00000d14      0x240 ./SWITCH_program.o
                                0x2c4 (size before relaxing)
 .stab          0x00000f54      0x324 ./TIMER_program.o
                                0x3a8 (size before relaxing)
 .stab          0x00001278      0x534 ./main.o
                                0x5dc (size before relaxing)

.stabstr        0x00000000      0xd5e
 *(.stabstr)
 .stabstr       0x00000000      0xd5e ./DIO_program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TIMER_Lec1MultiplexedSSDAss.elf elf32-avr)
LOAD linker stubs
